{"remainingRequest":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\src\\components\\setting\\Setting.vue?vue&type=style&index=0&id=04f20311&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\src\\components\\setting\\Setting.vue","mtime":1637637094000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zaWRlLXNldHRpbmd7CiAgbWluLWhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiBAYmFzZS1iZy1jb2xvcjsKICBwYWRkaW5nOiAyNHB4OwogIGZvbnQtc2l6ZTogMTRweDsKICBsaW5lLWhlaWdodDogMS41OwogIHdvcmQtd3JhcDogYnJlYWstd29yZDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgLmZsZXh7CiAgICBkaXNwbGF5OiBmbGV4OwogIH0KICAuc2VsZWN0LWl0ZW17CiAgICB3aWR0aDogODBweDsKICB9Cn0K"},{"version":3,"sources":["Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Setting.vue","sourceRoot":"src/components/setting","sourcesContent":["<template>\n  <div class=\"side-setting\">\n    <setting-item>\n      <a-button @click=\"saveSetting\" type=\"primary\" icon=\"save\">{{$t('save')}}</a-button>\n      <a-button @click=\"resetSetting\" type=\"dashed\" icon=\"redo\" style=\"float: right\">{{$t('reset')}}</a-button>\n    </setting-item>\n    <setting-item :title=\"$t('theme.title')\">\n      <img-checkbox-group\n        @change=\"values => setTheme({...theme, mode: values[0]})\"\n        :default-values=\"[theme.mode]\"\n      >\n        <img-checkbox :title=\"$t('theme.dark')\" img=\"https://gw.alipayobjects.com/zos/rmsportal/LCkqqYNmvBEbokSDscrm.svg\" value=\"dark\"/>\n        <img-checkbox :title=\"$t('theme.light')\" img=\"https://gw.alipayobjects.com/zos/rmsportal/jpRkZQMyYRryryPNtyIC.svg\" value=\"light\"/>\n        <img-checkbox :title=\"$t('theme.night')\" img=\"https://gw.alipayobjects.com/zos/antfincdn/hmKaLQvmY2/LCkqqYNmvBEbokSDscrm.svg\" value=\"night\"/>\n      </img-checkbox-group>\n    </setting-item>\n    <setting-item :title=\"$t('theme.color')\">\n      <color-checkbox-group\n        @change=\"(values, colors) => setTheme({...theme, color: colors[0]})\"\n        :defaultValues=\"[palettes.indexOf(theme.color)]\" :multiple=\"false\"\n      >\n        <color-checkbox v-for=\"(color, index) in palettes\" :key=\"index\" :color=\"color\" :value=\"index\" />\n      </color-checkbox-group>\n    </setting-item>\n    <a-divider/>\n    <setting-item :title=\"$t('navigate.title')\">\n      <img-checkbox-group\n        @change=\"values => setLayout(values[0])\"\n        :default-values=\"[layout]\"\n      >\n        <img-checkbox :title=\"$t('navigate.side')\" img=\"https://gw.alipayobjects.com/zos/rmsportal/JopDzEhOqwOjeNTXkoje.svg\" value=\"side\"/>\n        <img-checkbox :title=\"$t('navigate.head')\" img=\"https://gw.alipayobjects.com/zos/rmsportal/KDNDBbriJhLwuqMoxcAr.svg\" value=\"head\"/>\n        <img-checkbox :title=\"$t('navigate.mix')\" img=\"https://gw.alipayobjects.com/zos/antfincdn/x8Ob%26B8cy8/LCkqqYNmvBEbokSDscrm.svg\" value=\"mix\"/>\n      </img-checkbox-group>\n    </setting-item>\n    <setting-item>\n      <a-list :split=\"false\">\n        <a-list-item>\n          {{$t('navigate.content.title')}}\n          <a-select\n            :getPopupContainer=\"getPopupContainer\"\n            :value=\"pageWidth\"\n            @change=\"setPageWidth\"\n            class=\"select-item\" size=\"small\" slot=\"actions\"\n          >\n            <a-select-option value=\"fluid\">{{$t('navigate.content.fluid')}}</a-select-option>\n            <a-select-option value=\"fixed\">{{$t('navigate.content.fixed')}}</a-select-option>\n          </a-select>\n        </a-list-item>\n        <a-list-item>\n          {{$t('navigate.fixedHeader')}}\n          <a-switch :checked=\"fixedHeader\" slot=\"actions\" size=\"small\" @change=\"setFixedHeader\" />\n        </a-list-item>\n        <a-list-item>\n          {{$t('navigate.fixedSideBar')}}\n          <a-switch :checked=\"fixedSideBar\" slot=\"actions\" size=\"small\" @change=\"setFixedSideBar\" />\n        </a-list-item>\n      </a-list>\n    </setting-item>\n    <a-divider />\n    <setting-item :title=\"$t('other.title')\">\n      <a-list :split=\"false\">\n        <a-list-item>\n          {{$t('other.weekMode')}}\n          <a-switch :checked=\"weekMode\" slot=\"actions\" size=\"small\" @change=\"setWeekMode\" />\n        </a-list-item>\n        <a-list-item>\n          {{$t('other.multiPages')}}\n          <a-switch :checked=\"multiPage\" slot=\"actions\" size=\"small\" @change=\"setMultiPage\" />\n        </a-list-item>\n        <a-list-item>\n          {{$t('other.hideSetting')}}\n          <a-switch :checked=\"hideSetting\" slot=\"actions\" size=\"small\" @change=\"setHideSetting\" />\n        </a-list-item>\n      </a-list>\n    </setting-item>\n    <a-divider />\n    <setting-item :title=\"$t('animate.title')\">\n      <a-list :split=\"false\">\n        <a-list-item>\n          {{$t('animate.disable')}}\n          <a-switch :checked=\"animate.disabled\" slot=\"actions\" size=\"small\" @change=\"val => setAnimate({...animate, disabled: val})\" />\n        </a-list-item>\n        <a-list-item>\n          {{$t('animate.effect')}}\n          <a-select\n            :value=\"animate.name\"\n            :getPopupContainer=\"getPopupContainer\"\n            @change=\"val => setAnimate({...animate, name: val})\"\n            class=\"select-item\" size=\"small\" slot=\"actions\"\n          >\n            <a-select-option :key=\"index\" :value=\"item.name\" v-for=\"(item, index) in animates\">{{item.alias}}</a-select-option>\n          </a-select>\n        </a-list-item>\n        <a-list-item>\n          {{$t('animate.direction')}}\n          <a-select\n            :value=\"animate.direction\"\n            :getPopupContainer=\"getPopupContainer\"\n            @change=\"val => setAnimate({...animate, direction: val})\"\n            class=\"select-item\" size=\"small\" slot=\"actions\"\n          >\n            <a-select-option :key=\"index\" :value=\"item\" v-for=\"(item, index) in directions\">{{item}}</a-select-option>\n          </a-select>\n        </a-list-item>\n      </a-list>\n    </setting-item>\n    <a-alert\n      v-if=\"isDev\"\n      style=\"max-width: 240px; margin: -16px 0 8px; word-break: break-all\"\n      type=\"warning\"\n      :message=\"$t('alert')\"\n    >\n    </a-alert>\n    <a-button v-if=\"isDev\" id=\"copyBtn\" :data-clipboard-text=\"copyConfig\" @click=\"copyCode\" style=\"width: 100%\" icon=\"copy\" >{{$t('copy')}}</a-button>\n  </div>\n</template>\n\n<script>\nimport SettingItem from './SettingItem'\nimport {ColorCheckbox, ImgCheckbox} from '@/components/checkbox'\nimport Clipboard from 'clipboard'\nimport { mapState, mapMutations } from 'vuex'\nimport {formatConfig} from '@/utils/formatter'\nimport {setting} from '@/config/default'\nimport sysConfig from '@/config/config'\nimport fastEqual from 'fast-deep-equal'\nimport deepMerge from 'deepmerge'\n\nconst ColorCheckboxGroup = ColorCheckbox.Group\nconst ImgCheckboxGroup = ImgCheckbox.Group\nexport default {\n  name: 'Setting',\n  i18n: require('./i18n'),\n  components: {ImgCheckboxGroup, ImgCheckbox, ColorCheckboxGroup, ColorCheckbox, SettingItem},\n  data() {\n    return {\n      copyConfig: 'Sorry, you have copied nothing O(∩_∩)O~',\n      isDev: process.env.NODE_ENV === 'development'\n    }\n  },\n  computed: {\n    directions() {\n      return this.animates.find(item => item.name == this.animate.name).directions\n    },\n    ...mapState('setting', ['theme', 'layout', 'animate', 'animates', 'palettes', 'multiPage', 'weekMode', 'fixedHeader', 'fixedSideBar', 'hideSetting', 'pageWidth'])\n  },\n  watch: {\n    'animate.name': function(val) {\n      this.setAnimate({name: val, direction: this.directions[0]})\n    }\n  },\n  methods: {\n    getPopupContainer() {\n      return this.$el.parentNode\n    },\n    copyCode () {\n      let config = this.extractConfig(false)\n      this.copyConfig = `// 自定义配置，参考 ./default/setting.config.js，需要自定义的属性在这里配置即可\n      module.exports = ${formatConfig(config)}\n      `\n      let clipboard = new Clipboard('#copyBtn')\n      clipboard.on('success', () => {\n        this.$message.success(`复制成功，覆盖文件 src/config/config.js 然后重启项目即可生效`).then(() => {\n          const localConfig = localStorage.getItem(process.env.VUE_APP_SETTING_KEY)\n          if (localConfig) {\n            console.warn('检测到本地有历史保存的主题配置，想要要拷贝的配置代码生效，您可能需要先重置配置')\n            this.$message.warn('检测到本地有历史保存的主题配置，想要要拷贝的配置代码生效，您可能需要先重置配置', 5)\n          }\n        })\n        clipboard.destroy()\n      })\n    },\n    saveSetting() {\n      const closeMessage = this.$message.loading('正在保存到本地，请稍后...', 0)\n      const config = this.extractConfig(true)\n      localStorage.setItem(process.env.VUE_APP_SETTING_KEY, JSON.stringify(config))\n      setTimeout(closeMessage, 800)\n    },\n    resetSetting() {\n      this.$confirm({\n        title: '重置主题会刷新页面，当前页面内容不会保留，确认重置？',\n        onOk() {\n          localStorage.removeItem(process.env.VUE_APP_SETTING_KEY)\n          window.location.reload()\n        }\n      })\n    },\n    //提取配置\n    extractConfig(local = false) {\n      let config = {}\n      let mySetting = this.$store.state.setting\n      let dftSetting = local ? deepMerge(setting, sysConfig) : setting\n      Object.keys(mySetting).forEach(key => {\n        const dftValue = dftSetting[key], myValue = mySetting[key]\n        if (dftValue != undefined && !fastEqual(dftValue, myValue)) {\n          config[key] = myValue\n        }\n      })\n      return config\n    },\n    ...mapMutations('setting', ['setTheme', 'setLayout', 'setMultiPage', 'setWeekMode',\n      'setFixedSideBar', 'setFixedHeader', 'setAnimate', 'setHideSetting', 'setPageWidth'])\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .side-setting{\n    min-height: 100%;\n    background-color: @base-bg-color;\n    padding: 24px;\n    font-size: 14px;\n    line-height: 1.5;\n    word-wrap: break-word;\n    position: relative;\n    .flex{\n      display: flex;\n    }\n    .select-item{\n      width: 80px;\n    }\n  }\n</style>\n"]}]}