{"remainingRequest":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\src\\pages\\components\\table\\Api.vue?vue&type=style&index=0&id=a01929f8&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\src\\pages\\components\\table\\Api.vue","mtime":1637637094000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxzh\\OneDrive\\桌面\\vue-antd-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXBpewogIC5pbnRyb2R1Y2V7CiAgICBwYWRkaW5nOiAxNnB4OwogICAgLmNvbnRlbnR7CiAgICAgIGVtewogICAgICAgIG1hcmdpbjogMCA0cHg7CiAgICAgICAgY29sb3I6IEBwcmltYXJ5LWNvbG9yOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Api.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Api.vue","sourceRoot":"src/pages/components/table","sourcesContent":["<template>\n  <div class=\"api\">\n    <div class=\"introduce\">\n      <h2 class=\"title\">说明</h2>\n      <p class=\"content\">\n        AdvanceTable 是基于 Ant Design Vue Table 组件封装，支持其所有 API。<br/>\n        主要添加了<em>列设置</em>及<em>搜索控件配置</em>的功能，可用于一些需要动态配置表格展示、动态配置搜索条件的场景。<br/>\n        使用方式 与 antd table 基本无异。添加了部分API，如下：\n      </p>\n    </div>\n    <api-table :api-source=\"apiSource\" />\n    <api-table type=\"event\" title=\"事件\" :api-source=\"events\" />\n    <api-table title=\"Column\" :api-source=\"columnApi\" />\n    <api-table title=\"Search\" :api-source=\"searchApi\" />\n  </div>\n</template>\n\n<script>\n  import ApiTable from '@/components/table/api/ApiTable'\n  export default {\n    name: 'Api',\n    components: {ApiTable},\n    data() {\n      return {\n        apiSource: [\n          {\n            key: 0,\n            param: '<a href=\"https://www.antdv.com/components/table-cn/#API\" target=\"_blank\">Ant Design Vue Table API</a>',\n            desc: '支持 Ant Design Vue Table 组件 所有 api',\n            type: '--',\n            default: '--',\n          },\n          {\n            key: 1,\n            param: 'title',\n            desc: '表格标题',\n            type: 'string | slot',\n            default: '\\'高级表格\\''\n          },\n          {\n            key: 2,\n            param: 'formatConditions',\n            desc: `是否格式化搜索条件的值，格式化规则参考 <a>Search 配置</a>。\n                   <br/>false：取搜索输入控件的原值 <br/>true：取搜索输入控件格式化后的值`,\n            type: 'boolean',\n            default: 'false',\n          },\n          {\n            key: 3,\n            param: 'columns',\n            desc: `表格列配置，参考 <a>Column 配置</a>`,\n            type: 'array',\n            default: '--',\n          }\n        ],\n        events: [\n          {\n            key: 0,\n            param: '<a href=\"https://www.antdv.com/components/table-cn/#API\" target=\"_blank\">Ant Design Vue Table Events API</a>',\n            desc: '支持 Ant Design Vue Table 所有事件',\n            callback: '--',\n          },\n          {\n            key: 1,\n            param: 'search',\n            desc: '搜索条件变化时触发',\n            callback: 'Function(conditions, searchOptions: [{field, value, format}])',\n          },\n          {\n            key: 2,\n            param: 'refresh',\n            desc: '表头刷新图标点击时触发',\n            callback: 'Function(conditions, searchOptions: [{field, value, format}])',\n          },\n          {\n            key: 3,\n            param: 'reset',\n            desc: '列配置重置按钮点击时触发',\n            callback: 'Function(conditions, searchOptions: [{field, value, format}])',\n          },\n        ],\n        columnApi: [\n          {\n            key: 0,\n            param: '<a href=\"https://www.antdv.com/components/table-cn/#API\" target=\"_blank\">Ant Design Vue Table Column API</a>',\n            desc: '支持 Ant Design Vue Table 组件 Column 配置所有 api',\n            type: '--',\n            default: '--'\n          },\n          {\n            key: 1,\n            param: 'searchAble',\n            desc: '是否启用列搜索',\n            type: 'boolean',\n            default: 'false'\n          },\n          {\n            key: 2,\n            param: 'dataType',\n            desc: `数据类型，该配置将决定列搜索输入控件的类型，与列搜索输入控件对应关系如下：<br/>\n                   string: 输入框组件<br/>\n                   boolean: 开关组件<br/>\n                   select: 下拉输入框组件<br/>\n                   date: 日期选择器<br/>\n                   time: 时间选择器<br/>\n                   datetime: 带时间选择器的日期选择器`,\n            type: `'string' | 'boolean' | 'select' | 'date' | 'time' | 'datetime'`,\n            default: `'string'`\n          },\n          {\n            key: 3,\n            param: 'search',\n            desc: '列搜索配置，参考 <a>Search 配置</a>',\n            type: 'object',\n            default: '--'\n          },\n        ],\n        searchApi: [\n          {\n            key: 0,\n            param: 'format',\n            desc: `列搜索输入控件值的格式化配置。<br/>如果输入控件支持格式化，则可设置该值为字符串，如日期输入组件，可设为为 'YYYY-MM-DD'。\n                   <br/>不支持格式化的输入控件，可设置为一个接收控件的输入值作为参数的函数，如 (value) => {return \\`prefix\\${value}\\`}。`,\n            type: 'string | Function(value)',\n            default: '取输入控件默认的格式化配置'\n          },\n          {\n            key: 1,\n            param: 'selectOptions',\n            desc: `select 数据类型的下拉输入组件的选项配置，可参考 <a href=\"https://www.antdv.com/components/select-cn/#API\" target=\"_blank\">Ant Design Vue Select Option props Api</a>`,\n            type: 'array',\n            default: '--'\n          }\n        ],\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n.api{\n  .introduce{\n    padding: 16px;\n    .content{\n      em{\n        margin: 0 4px;\n        color: @primary-color;\n      }\n    }\n  }\n}\n</style>"]}]}